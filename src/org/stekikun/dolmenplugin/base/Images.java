package org.stekikun.dolmenplugin.base;

/**
 * Defines constants for the various images
 * used by the plug-in
 * 
 * @author St√©phane Lescuyer
 */
public abstract class Images {

	private Images() {
		// Static utility only
	}
	
	/**
	 * The path where images are stored in the project
	 */
	public static final String DIR = "icons/";
	
	/**
	 * Icon for Dolmen lexer descriptions in the explorer
	 */
	public static final String DOLMEN_LEXER = DIR + "dolmen_lexer.gif";
	
	/**
	 * Icon for Dolmen parser descriptions in the explorer
	 */
	public static final String DOLMEN_PARSER = DIR + "dolmen_parser.gif";
	
	/**
	 * Decoration icon for Java files generated by Dolmen
	 */
	public static final String GENERATED = DIR + "generated.gif";
	
	/**
	 * Icon for private lexer entries in lexer outline view
	 */
	public static final String PRIVATE_LEXER_ENTRY = DIR + "lexer_entry_pri.gif";
	
	/**
	 * Icon for public lexer entries in lexer outline view
	 */
	public static final String PUBLIC_LEXER_ENTRY = DIR + "lexer_entry_pub.gif";
	
	/**
	 * @param visibility
	 * @return icon for lexer entries based on given visibility
	 */
	public static String LEXER_ENTRY(boolean visibility) {
		return visibility ? PUBLIC_LEXER_ENTRY : PRIVATE_LEXER_ENTRY;
	}
	
	/**
	 * Icon for filter action in lexer outline view
	 */
	public static final String NO_REGEXP_DEF = DIR + "no_regexp_def.gif";
	
	/**
	 * Icon for filter action in parser outline view
	 */
	public static final String NO_TOKEN_DECL = DIR + "no_token_decl.gif";
	
	/**
	 * Icon for protected fields in completion proposals
	 */
	public static final String PROTECTED_FIELD = DIR + "protected_field.gif";
	
	/**
	 * Icon for protected methods in completion proposals
	 */
	public static final String PROTECTED_METHOD = DIR + "protected_method.gif";
	
	/**
	 * Icon for regular expression definitions in lexer outline view
	 */
	public static final String REGEXP_DEF = DIR + "regexp_def.gif";
	
	/**
	 * Icon for rule productions in grammar outline view
	 * and entry clauses in lexer outline view
	 */
	public static final String PRODUCTION = DIR + "rightarrow.gif";
	
	/**
	 * Icon for private rule declarations in grammar outline view
	 */
	public static final String PRIVATE_RULE = DIR + "rule_pri.gif";
	
	/**
	 * Icon for public rule declarations in grammar outline view
	 */
	public static final String PUBLIC_RULE = DIR + "rule_pub.gif";

	/**
	 * @param visibility
	 * @return icon for rule declarations based on given visibility
	 */
	public static String RULE(boolean visibility) {
		return visibility ? PUBLIC_RULE : PRIVATE_RULE;
	}

	/**
	 * Icon for semantic actions in outline views
	 */
	public static final String SEMANTIC_ACTION = DIR + "sem_action.gif";
	
	/**
	 * Icon for token declarations with value in grammar outline view
	 */
	public static final String VALUED_TOKEN_DECL = DIR + "token_decl_valued.gif";
	
	/**
	 * Icon for token declarations without value in grammar outline view
	 */
	public static final String TOKEN_DECL = DIR + "token_decl.gif";

	/**
	 * @param valued
	 * @return icon for token declarations based on whether valued or not
	 */
	public static String TOKEN_DECL(boolean valued) {
		return valued ? VALUED_TOKEN_DECL : TOKEN_DECL;
	}
	
	/**
	 * Icon for problem reports in outline views
	 */
	public static final String WARNING_SIGN = DIR + "warning_sign.gif";
}
